apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-app
spec:
  selector:
    matchLabels:
      run: customer-app
  replicas: 1
  template:
    metadata:
      labels:
        run: customer-app
    spec:
      containers:
      - name: customer-app
        image: docker.io/dfoley3118/customer-app:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: customer-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: customer-app
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-app
spec:
  selector:
    matchLabels:
      run: order-app
  replicas: 1
  template:
    metadata:
      labels:
        run: order-app
    spec:
      containers:
      - name: order-app
        image: docker.io/dfoley3118/order-app:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: order-app
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-app
spec:
  selector:
    matchLabels:
      run: payment-app
  replicas: 1
  template:
    metadata:
      labels:
        run: payment-app
    spec:
      containers:
      - name: payment-app
        image: docker.io/dfoley3118/payment-app:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: payment-app
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-app
spec:
  selector:
    matchLabels:
      run: inventory-app
  replicas: 1
  template:
    metadata:
      labels:
        run: inventory-app
    spec:
      containers:
      - name: inventory-app
        image: docker.io/dfoley3118/inventory-app:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: inventory-app
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-mesh-ui
spec:
  selector:
    matchLabels:
      run: service-mesh-ui
  replicas: 1
  template:
    metadata:
      labels:
        run: service-mesh-ui
    spec:
      containers:
      - name: service-mesh-ui
        image: docker.io/dfoley3118/service-mesh-ui:latest
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: service-mesh-ui-service
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    run: service-mesh-ui
  type: LoadBalancer
status:
  loadBalancer: {}
